---
import Container from "@/components/container.astro";
import ErrorBoundary from "@/components/error-boundary.astro";
import Fallback from "@/components/fallback.astro";
import Results from "@/components/results.astro";
import SearchForm from "@/components/search-form.astro";
import Layout from "@/layouts/layout.astro";

import { defaultQuery, searchParam } from "@/lib/constants";
import { search } from "@/lib/search";
import { schema, searchSchema } from "@/schema/schema";

import type { Result } from "@/schema/schema";

let payload = {} as Result;
let error = "";
let query: string | null = null;
let loading = false;

try {
  loading = true;

  if (Astro.url.searchParams.has(searchParam)) {
    query = Astro.url.searchParams.get(searchParam);

    const result = searchSchema.safeParse({ query });
    if (!result.success) {
      query = "";
      const errors = result.error.flatten();
      error = errors.fieldErrors.query?.[0] || "Unknown Error";
    } else {
      query = result.data.query;
      const response = await search(query);
      payload = schema.parse(response);
    }
  } else {
    query = defaultQuery;
    const response = await search(query);
    payload = schema.parse(response);
  }
} catch {
  error = "Network error. Please try again.";
} finally {
  loading = false;
}

const htmlTitle = query
  ? `${query}: Meaning, Synonyms, and More | Glossary`
  : "Glossary";

const description = query
  ? `Discover the meaning of '${query}' including synonyms, antonyms, and usage examples in English. Search more words instantly on Glossary.`
  : "Glossary is the ultimate free dictionary app, perfect for language learners and students! Search and discover word meanings, definitions, synonyms, and usage examples instantly. Use our dictionary app for quick word lookup and vocabulary building.";

console.log(JSON.stringify(payload.data));
---

<Layout>
  <Fragment slot="head">
    <title>{htmlTitle}</title>
    <meta name="title" content={htmlTitle} />
    <meta name="description" content={description} />
  </Fragment>

  <main aria-labelledby="heading error">
    <Container class="flex flex-col gap-8">
      <section aria-label="SEARCH FOR A WORD">
        <SearchForm searchTerm={query} {error} />
      </section>

      {loading && <Fallback />}

      {
        payload.error ? (
          <section
            aria-labelledby="error"
            class="grid min-h-[40vh] place-content-center"
          >
            <ErrorBoundary error={payload.error} />
          </section>
        ) : null
      }

      {
        payload.data ? (
          <section aria-labelledby="heading" class="flex flex-col gap-8">
            <Results data={payload.data} />
          </section>
        ) : null
      }
    </Container>
  </main>
</Layout>
